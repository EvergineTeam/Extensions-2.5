//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;

namespace Noesis
{

public class Storyboard : ParallelTimeline {
  internal new static Storyboard CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new Storyboard(cPtr, cMemoryOwn);
  }

  internal Storyboard(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(Storyboard obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  public Storyboard() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    registerExtend = false;
    return NoesisGUI_PINVOKE.new_Storyboard();
  }

  public static string GetTargetName(DependencyObject element) {
    IntPtr strPtr = NoesisGUI_PINVOKE.Storyboard_GetTargetName(DependencyObject.getCPtr(element));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    string str = Noesis.Extend.StringFromNativeUtf8(strPtr);
    return str;
  }

  public static void SetTargetName(DependencyObject element, string name) {
    NoesisGUI_PINVOKE.Storyboard_SetTargetName(DependencyObject.getCPtr(element), name != null ? name : string.Empty);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public static PropertyPath GetTargetProperty(DependencyObject element) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Storyboard_GetTargetProperty(DependencyObject.getCPtr(element));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return (PropertyPath)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static void SetTargetProperty(DependencyObject element, PropertyPath path) {
    NoesisGUI_PINVOKE.Storyboard_SetTargetProperty(DependencyObject.getCPtr(element), PropertyPath.getCPtr(path));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public static DependencyObject GetTarget(DependencyObject element) {
    IntPtr cPtr = NoesisGUI_PINVOKE.Storyboard_GetTarget(DependencyObject.getCPtr(element));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return (DependencyObject)Noesis.Extend.GetProxy(cPtr, false);
  }

  public static void SetTarget(DependencyObject element, DependencyObject target) {
    NoesisGUI_PINVOKE.Storyboard_SetTarget(DependencyObject.getCPtr(element), DependencyObject.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin() {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, bool isControllable) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_2(swigCPtr, FrameworkElement.getCPtr(target), isControllable);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, HandoffBehavior handoffBehavior) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_3(swigCPtr, FrameworkElement.getCPtr(target), (int)handoffBehavior);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, HandoffBehavior handoffBehavior, bool isControllable) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_4(swigCPtr, FrameworkElement.getCPtr(target), (int)handoffBehavior, isControllable);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, FrameworkElement nameScope) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_5(swigCPtr, FrameworkElement.getCPtr(target), FrameworkElement.getCPtr(nameScope));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, FrameworkElement nameScope, bool isControllable) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_6(swigCPtr, FrameworkElement.getCPtr(target), FrameworkElement.getCPtr(nameScope), isControllable);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, FrameworkElement nameScope, HandoffBehavior handoffBehavior) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_7(swigCPtr, FrameworkElement.getCPtr(target), FrameworkElement.getCPtr(nameScope), (int)handoffBehavior);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Begin(FrameworkElement target, FrameworkElement nameScope, HandoffBehavior handoffBehavior, bool isControllable) {
    NoesisGUI_PINVOKE.Storyboard_Begin__SWIG_8(swigCPtr, FrameworkElement.getCPtr(target), FrameworkElement.getCPtr(nameScope), (int)handoffBehavior, isControllable);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Pause() {
    NoesisGUI_PINVOKE.Storyboard_Pause__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Pause(FrameworkElement target) {
    NoesisGUI_PINVOKE.Storyboard_Pause__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resume() {
    NoesisGUI_PINVOKE.Storyboard_Resume__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Resume(FrameworkElement target) {
    NoesisGUI_PINVOKE.Storyboard_Resume__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Stop() {
    NoesisGUI_PINVOKE.Storyboard_Stop__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Stop(FrameworkElement target) {
    NoesisGUI_PINVOKE.Storyboard_Stop__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Remove() {
    NoesisGUI_PINVOKE.Storyboard_Remove__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public void Remove(FrameworkElement target) {
    NoesisGUI_PINVOKE.Storyboard_Remove__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
  }

  public bool IsPlaying() {
    bool ret = NoesisGUI_PINVOKE.Storyboard_IsPlaying__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsPlaying(FrameworkElement target) {
    bool ret = NoesisGUI_PINVOKE.Storyboard_IsPlaying__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsPaused() {
    bool ret = NoesisGUI_PINVOKE.Storyboard_IsPaused__SWIG_0(swigCPtr);
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool IsPaused(FrameworkElement target) {
    bool ret = NoesisGUI_PINVOKE.Storyboard_IsPaused__SWIG_1(swigCPtr, FrameworkElement.getCPtr(target));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static DependencyProperty TargetNameProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Storyboard_TargetNameProperty_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty TargetProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Storyboard_TargetProperty_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty TargetPropertyProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.Storyboard_TargetPropertyProperty_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.Storyboard_GetStaticType();
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}

}

