//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.10
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


using System;
using System.Runtime.InteropServices;
using System.Collections.Generic;

namespace Noesis
{

public class ScrollBar : RangeBase {
  internal new static ScrollBar CreateProxy(IntPtr cPtr, bool cMemoryOwn) {
    return new ScrollBar(cPtr, cMemoryOwn);
  }

  internal ScrollBar(IntPtr cPtr, bool cMemoryOwn) : base(cPtr, cMemoryOwn) {
  }

  internal static HandleRef getCPtr(ScrollBar obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  #region Events
  #region Scroll
  public delegate void ScrollHandler(object sender, ScrollEventArgs e);
  public event ScrollHandler Scroll {
    add {
      if (!_Scroll.ContainsKey(swigCPtr.Handle)) {
        _Scroll.Add(swigCPtr.Handle, null);

        NoesisGUI_PINVOKE.BindEvent_ScrollBar_Scroll(_raiseScroll, swigCPtr.Handle);
        if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      }

      _Scroll[swigCPtr.Handle] += value;
    }
    remove {
      if (_Scroll.ContainsKey(swigCPtr.Handle)) {

        _Scroll[swigCPtr.Handle] -= value;

        if (_Scroll[swigCPtr.Handle] == null) {
          NoesisGUI_PINVOKE.UnbindEvent_ScrollBar_Scroll(_raiseScroll, swigCPtr.Handle);
          if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();

          _Scroll.Remove(swigCPtr.Handle);
        }
      }
    }
  }

  internal delegate void RaiseScrollCallback(IntPtr cPtr, IntPtr sender, IntPtr e);
  private static RaiseScrollCallback _raiseScroll = RaiseScroll;

  [MonoPInvokeCallback(typeof(RaiseScrollCallback))]
  private static void RaiseScroll(IntPtr cPtr, IntPtr sender, IntPtr e) {
    try {
      if (!_Scroll.ContainsKey(cPtr)) {
        throw new InvalidOperationException("Delegate not registered for Scroll event");
      }
      if (sender == IntPtr.Zero && e == IntPtr.Zero) {
        _Scroll.Remove(cPtr);
        return;
      }
      if (Noesis.Extend.Initialized) {
        ScrollHandler handler = _Scroll[cPtr];
        if (handler != null) {
          handler(Noesis.Extend.GetProxy(sender, false), new ScrollEventArgs(e, false));
        }
      }
    }
    catch (Exception exception) {
      Noesis.Error.SetNativePendingError(exception);
    }
  }

  static Dictionary<IntPtr, ScrollHandler> _Scroll =
      new Dictionary<IntPtr, ScrollHandler>();
  #endregion

  #endregion

  public ScrollBar() {
  }

  protected override IntPtr CreateCPtr(Type type, out bool registerExtend) {
    if ((object)type.TypeHandle == typeof(ScrollBar).TypeHandle) {
      registerExtend = false;
      return NoesisGUI_PINVOKE.new_ScrollBar();
    }
    else {
      return base.CreateExtendCPtr(type, out registerExtend);
    }
  }

  public static DependencyProperty OrientationProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_OrientationProperty_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static DependencyProperty ViewportSizeProperty {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ViewportSizeProperty_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (DependencyProperty)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand DeferScrollToHorizontalOffsetCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_DeferScrollToHorizontalOffsetCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_DeferScrollToHorizontalOffsetCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand DeferScrollToVerticalOffsetCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_DeferScrollToVerticalOffsetCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_DeferScrollToVerticalOffsetCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineDownCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_LineDownCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineDownCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineLeftCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_LineLeftCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineLeftCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineRightCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_LineRightCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineRightCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand LineUpCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_LineUpCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_LineUpCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageDownCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_PageDownCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageDownCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageLeftCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_PageLeftCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageLeftCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageRightCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_PageRightCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageRightCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand PageUpCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_PageUpCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_PageUpCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollHereCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollHereCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollHereCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToBottomCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToBottomCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToBottomCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToEndCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToEndCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToEndCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToHomeCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToHomeCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToHomeCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToHorizontalOffsetCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToHorizontalOffsetCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToHorizontalOffsetCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToLeftEndCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToLeftEndCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToLeftEndCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToRightEndCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToRightEndCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToRightEndCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToTopCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToTopCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToTopCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public static RoutedCommand ScrollToVerticalOffsetCommand {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ScrollToVerticalOffsetCommand_set(RoutedCommand.getCPtr(value));
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_ScrollToVerticalOffsetCommand_get();
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (RoutedCommand)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  public Orientation Orientation {
    set {
      NoesisGUI_PINVOKE.ScrollBar_Orientation_set(swigCPtr, (int)value);
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      Orientation ret = (Orientation)NoesisGUI_PINVOKE.ScrollBar_Orientation_get(swigCPtr);
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public float ViewportSize {
    set {
      NoesisGUI_PINVOKE.ScrollBar_ViewportSize_set(swigCPtr, value);
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      float ret = NoesisGUI_PINVOKE.ScrollBar_ViewportSize_get(swigCPtr);
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

  public Track Track {
    get {
      IntPtr cPtr = NoesisGUI_PINVOKE.ScrollBar_Track_get(swigCPtr);
      if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
      return (Track)Noesis.Extend.GetProxy(cPtr, false);
    }
  }

  new internal static IntPtr GetStaticType() {
    IntPtr ret = NoesisGUI_PINVOKE.ScrollBar_GetStaticType();
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }


  internal new static IntPtr Extend(string typeName) {
    IntPtr nativeType = NoesisGUI_PINVOKE.Extend_ScrollBar(Marshal.StringToHGlobalAnsi(typeName));
    if (NoesisGUI_PINVOKE.SWIGPendingException.Pending) throw NoesisGUI_PINVOKE.SWIGPendingException.Retrieve();
    return nativeType;
  }
}

}

